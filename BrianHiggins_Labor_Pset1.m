%Brian Higgins

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Setup data and main vectors
clear all

cd '/Users/Brian/Dropbox/7. 2nd year classes/3.Labor - Luigi/1.ProblemSet1'
A = importdata('data.csv');
data = A.data/100;
y = zeros(29*2,182);
n = 182 ;

for i = 1:182
    y(1:29,i) = data(1+(29*(i-1)):29*i,1) ; 
    y(30:end,i) = data(1+(29*(i-1)):29*i,2) ;
end

for i = 1:182
    ctemp(:,:,i) = y(:,i)* y(:,i)' ;
end
c = (1/182)*sum(ctemp,3) ;
c_output = triu(c) ; 

m = c(find(triu(c))) ; 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Question 1
%id_q1 = zeros(size(c)) ; %Initalise 
%c_q1 = zeros(size(c)) ; 

% Pick out elements of c and stack
 m_q1 = fun_m_q1(c) ;

% Do the same for all c(i) _ runs that same fn as above
for i = 1:182 
    m_q1_i(:,i) = fun_m_q1(ctemp(:,:,i)) ;
end
for i = 182
    v_temp(:,:,i) = (m_q1_i(:,i) - m_q1)*(m_q1_i(:,i) - m_q1)' ; 
end
v_q1 = (1/182)*sum(v_temp,3) ;
v_inv_q1 = pinv(v_q1) ;
%v_inv_q1_2 = inv(v_q1) ; *Singular

test_stat_q1_omd = n*m_q1'*v_inv_q1*m_q1 ;
test_stat_q1_ewmd = n*m_q1'*eye(length(m_q1))*m_q1 ;

df_q1 = length(m_q1) ; 

%p_value_q1_omd = chi2pdf(test_stat_q1_omd,df_q1) ; 
%p_value_q1_ewmd = chi2pdf(test_stat_q1_ewmd,df_q1) ; 
p_value_q1_omd = chi2cdf(test_stat_q1_omd,df_q1,'upper') ; 
p_value_q1_ewmd = chi2cdf(test_stat_q1_ewmd,df_q1,'upper') ; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Question 2
        % Here we want to estimate the 
     % Pick out elements of c and stack
 m_q2 = fun_m_q2(c) ;

% Do the same for all c(i) _ runs that same fn as above
for i = 1:182 
    m_q2_i(:,i) = fun_m_q2(ctemp(:,:,i)) ;
end

v_temp = [] ; 
for i = 182
    v_temp(:,:,i) = (m_q2_i(:,i) - m_q2)*(m_q2_i(:,i) - m_q2)' ; 
end
v_q2 = (1/182)*sum(v_temp,3) ;
v_inv_q2 = pinv(v_q2) ;

% define function of parameters
f_a = @(sigma)  [ repmat([sigma(1); sigma(2); sigma(3)],27,1) ; sigma(1); sigma(2); sigma(1) ; ...
               repmat([sigma(4); sigma(5); sigma(6)],27,1) ; sigma(4); sigma(5); sigma(4) ; ... 
               repmat([sigma(7); sigma(8); sigma(9)],27,1) ; sigma(7); sigma(8); sigma(7) ; ... 
               sigma(10); repmat([sigma(11); sigma(10)],27,1) ] ; 
        
objective_o = @(sigma)  n*(m_q2 - f_a(sigma))'*v_inv_q2*(m_q2 - f_a(sigma)) ; 
objective_e = @(sigma)  n*(m_q2 - f_a(sigma))'*eye(length(m_q2))*(m_q2 - f_a(sigma)) ; 

sigma_hat_o = []
sigma_hat_e = []
sigma_hat_o = fminunc(objective_o, ones(1,11)) ; %Estimate sigma
sigma_hat_e = fminunc(objective_e, ones(1,11)) ; %Estimate sigma

jac_q2 = [ [repmat([1;0;0],27,1);1;0;1;repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)] ,...
        [repmat([0;1;0],27,1);0;1;0;repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;1],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([1;0;0],27,1);1;0;1;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;1;0],27,1);0;1;0;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;0;1],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;repmat([1;0;0],27,1);1;0;1;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;repmat([0;1;0],27,1);0;1;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;repmat([0;0;1],27,1);0;0;0;0; repmat([0; 0],27,1) ]  ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;1; repmat([0; 1],27,1) ]  ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;0; repmat([1; 0],27,1) ] ] ;
 
[test_stat_q2_omd,test_stat_q2_ewmd] = fun_test_stat(f_a, sigma_hat_e, sigma_hat_o, jac_q2, v_q2,v_inv_q2, m_q2, n) ; 
df_q2 = length(m_q2) - rank(jac_q2) ; 

%p_value_q2_omd = chi2pdf(test_stat_q2_omd,df_q2) ; 
%p_value_q2_ewmd = chi2pdf(test_stat_q2_ewmd,df_q2) ;
p_value_q2_omd = chi2cdf(test_stat_q2_omd,df_q2,'upper') ; 
p_value_q2_ewmd = chi2cdf(test_stat_q2_ewmd,df_q2,'upper') ; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Question 3 - Non-stationary MA(1)

% Pick out elements of c and stack
 m_q3 = fun_m_q3(c) ;

% Do the same for all c(i) _ runs that same fn as above
for i = 1:182 
    m_q3_i(:,i) = fun_m_q3(ctemp(:,:,i)) ;
end
v_temp = [] ;  %re-intialise v_temp
for i = 182
    v_temp(:,:,i) = (m_q3_i(:,i) - m_q3)*(m_q3_i(:,i) - m_q3)' ; 
end
v_q3 = (1/182)*sum(v_temp,3) ;
v_inv_q3 = pinv(v_q3) ;
%v_inv_q1_2 = inv(v_q1) ; *Singular

test_stat_q3_omd = n*m_q3'*v_inv_q3*m_q3 ;
test_stat_q3_ewmd = n*m_q3'*eye(length(m_q3))*m_q3 ;
df_q3 = length(m_q3)-length(m_q1) ; 

%p_value_q3_omd = chi2pdf(test_stat_q3_omd,df_q3) ; 
%p_value_q3_ewmd = chi2pdf(test_stat_q3_ewmd,df_q3) ; 
p_value_q3_omd = chi2cdf(test_stat_q3_omd,df_q3,'upper') ; 
p_value_q3_ewmd = chi2cdf(test_stat_q3_ewmd,df_q3,'upper') ; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Question 4 - Measurement error
% Pick out elements of c and stack
 m_q4 = fun_m_q4(c) ;

% Do the same for all c(i) _ runs that same fn as above
for i = 1:182 
    m_q4_i(:,i) = fun_m_q4(ctemp(:,:,i)) ;
end
v_temp = [] ;  %re-intialise v_temp
for i = 182
    v_temp(:,:,i) = (m_q4_i(:,i) - m_q4)*(m_q4_i(:,i) - m_q4)' ; 
end
v_q4 = (1/182)*sum(v_temp,3) ;
v_inv_q4 = pinv(v_q4) ;

sigma = [] % reinitialise sigma
% define function of parameters
f_a4 = @(sigma)  [ repmat([2*sigma(1); -sigma(1)],28,1) ; 2*sigma(1); ; ...
               repmat([2*sigma(2); -sigma(2)],28,1) ; 2*sigma(2);  ... 
               repmat([2*sigma(3); -sigma(3)],28,1) ; 2*sigma(3) ; ... 
               repmat([-sigma(3)],28,1) ] ; 
        

objective_o = @(sigma)  n*(m_q4 - f_a4(sigma))'*v_inv_q4*(m_q4 - f_a4(sigma)) ; 
objective_e = @(sigma)  n*(m_q4 - f_a4(sigma))'*eye(length(m_q4))*(m_q4 - f_a4(sigma)) ; 

sigma_hat_o = []
sigma_hat_e = []
sigma_hat_o = fminunc(objective_o, ones(1,3)) ; %Estimate sigma
sigma_hat_e = fminunc(objective_e, ones(1,3)) ; %Estimate sigma
%sigma_hat4 = fminunc(objective, ones(1,3)) ; %Estimate sigma

jac_q4 = [ [repmat([2;-1],28,1);2;repmat([0;0],28,1);0;;repmat([0;0],28,1);0; repmat([0],28,1)] , ...
        [repmat([0;0],28,1);0;repmat([2;-1],28,1);2;;repmat([0;0],28,1);0; repmat([0],28,1)] , ...
        [repmat([0;0],28,1);0;repmat([0;0],28,1);0;;repmat([2;-1],28,1);2; repmat([-1],28,1) ] ] ; 
        
[test_stat_q4_omd,test_stat_q4_ewmd] = fun_test_stat(f_a4, sigma_hat_e,sigma_hat_o, jac_q4,v_q4, v_inv_q4, m_q4, n) ; 
 df_q4 = length(m_q4) - rank(jac_q4) ; 


 %p_value_q4_omd = chi2pdf(test_stat_q4_omd,df_q4) ; 
%p_value_q4_ewmd = chi2pdf(test_stat_q4_ewmd,df_q4) ; 
p_value_q4_omd = chi2cdf(test_stat_q4_omd,df_q4,'upper') ; 
p_value_q4_ewmd = chi2cdf(test_stat_q4_ewmd,df_q4,'upper') ; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Question 5 - Symmetric MA
%Here we use the code from Q2 but adapt the functional form to impose
%symmetry in the cross covariances
    % Pick out elements of c and stack
 m_q2 = fun_m_q2(c) ;

% Do the same for all c(i) _ runs that same fn as above
for i = 1:182 
    m_q2_i(:,i) = fun_m_q2(ctemp(:,:,i)) ;
end

v_temp = [] ; 
for i = 182
    v_temp(:,:,i) = (m_q2_i(:,i) - m_q2)*(m_q2_i(:,i) - m_q2)' ; 
end
v_q2 = (1/182)*sum(v_temp,3) ;
v_inv_q2 = pinv(v_q2) ;

% define function of parameters
f_a5 = @(sigma)  [ repmat([sigma(1); sigma(2); sigma(3)],27,1) ; sigma(1); sigma(2); sigma(1) ; ...
               repmat([sigma(4); sigma(5); sigma(6)],27,1) ; sigma(4); sigma(5); sigma(4) ; ... 
               repmat([sigma(7); sigma(8); sigma(9)],27,1) ; sigma(7); sigma(8); sigma(7) ; ... 
               sigma(8); repmat([sigma(9); sigma(8)],27,1) ] ; 
        
%objective = @(sigma)  n*(m_q2 - f_a5(sigma))'*v_inv_q2*(m_q2 - f_a5(sigma)) ; 
objective_o = @(sigma)  n*(m_q2 - f_a5(sigma))'*v_inv_q2*(m_q2 - f_a5(sigma)) ; 
objective_e = @(sigma)  n*(m_q2 - f_a5(sigma))'*eye(length(m_q2))*(m_q2 - f_a5(sigma)) ;

sigma_hat_o = []
sigma_hat_e = []
sigma_hat_o = fminunc(objective_o, ones(1,9)) ; %Estimate sigma
sigma_hat_e = fminunc(objective_e, ones(1,9)) ; %Estimate sigma
%sigma_hat = []
%sigma_hat = fminunc(objective, ones(1,9)) ; %Estimate sigma

jac_q5 = [ [repmat([1;0;0],27,1);1;0;1;repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)] ,...
        [repmat([0;1;0],27,1);0;1;0;repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;1],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([1;0;0],27,1);1;0;1;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;1;0],27,1);0;1;0;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;0;1],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;repmat([1;0;0],27,1);1;0;1;0; repmat([0; 0],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;repmat([0;1;0],27,1);0;1;0;1; repmat([0; 1],27,1)], ...
        [repmat([0;0;0],27,1);0;0;0;repmat([0;0;0],27,1);0;0;0;repmat([0;0;1],27,1);0;0;0;0; repmat([1; 0],27,1) ] ] ;

 
[test_stat_q5_omd,test_stat_q5_ewmd] = fun_test_stat(f_a5, sigma_hat_e,sigma_hat_o, jac_q5,v_q2, v_inv_q2, m_q2, n) ; 
df_q5 = length(m_q2) - rank(jac_q5) ; 

%p_value_q5_omd = chi2pdf(test_stat_q5_omd,df_q5) ; 
%p_value_q5_ewmd = chi2pdf(test_stat_q5_ewmd,df_q5) ; 
p_value_q5_omd = chi2cdf(test_stat_q5_omd,df_q5,'upper') ; 
p_value_q5_ewmd = chi2cdf(test_stat_q5_ewmd,df_q5,'upper') ;  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Question 6 - Two component model
     % Pick out elements of c and stack
 m_q2 = fun_m_q2(c) ;

% Do the same for all c(i) _ runs that same fn as above
for i = 1:182 
    m_q2_i(:,i) = fun_m_q2(ctemp(:,:,i)) ;
end

v_temp = [] ; 
for i = 182
    v_temp(:,:,i) = (m_q2_i(:,i) - m_q2)*(m_q2_i(:,i) - m_q2)' ; 
end
v_q2 = (1/182)*sum(v_temp,3) ;
v_inv_q2 = pinv(v_q2) ;

% define function of parameters
f_a6 = @(sigma)[ (sigma(1)^2)*sigma(3)+ 2*sigma(2); (sigma(1)^2)*sigma(30)-sigma(2); (sigma(1)^2)*sigma(30); ...
                (sigma(1)^2)*sigma(4)+ 2*sigma(2); (sigma(1)^2)*sigma(31)-sigma(2); (sigma(1)^2)*sigma(31); ...
                (sigma(1)^2)*sigma(5)+ 2*sigma(2); (sigma(1)^2)*sigma(32)-sigma(2); (sigma(1)^2)*sigma(32); ...
                (sigma(1)^2)*sigma(6)+ 2*sigma(2); (sigma(1)^2)*sigma(33)-sigma(2); (sigma(1)^2)*sigma(33); ...
                (sigma(1)^2)*sigma(7)+ 2*sigma(2); (sigma(1)^2)*sigma(34)-sigma(2); (sigma(1)^2)*sigma(34); ...
                (sigma(1)^2)*sigma(8)+ 2*sigma(2); (sigma(1)^2)*sigma(35)-sigma(2); (sigma(1)^2)*sigma(35); ...
                (sigma(1)^2)*sigma(9)+ 2*sigma(2); (sigma(1)^2)*sigma(36)-sigma(2); (sigma(1)^2)*sigma(36); ...
                (sigma(1)^2)*sigma(10)+ 2*sigma(2); (sigma(1)^2)*sigma(37)-sigma(2); (sigma(1)^2)*sigma(37); ...
                (sigma(1)^2)*sigma(11)+ 2*sigma(2); (sigma(1)^2)*sigma(38)-sigma(2); (sigma(1)^2)*sigma(38); ...
                (sigma(1)^2)*sigma(12)+ 2*sigma(2); (sigma(1)^2)*sigma(39)-sigma(2); (sigma(1)^2)*sigma(39); ...
                (sigma(1)^2)*sigma(13)+ 2*sigma(2); (sigma(1)^2)*sigma(40)-sigma(2); (sigma(1)^2)*sigma(40); ...
                (sigma(1)^2)*sigma(14)+ 2*sigma(2); (sigma(1)^2)*sigma(41)-sigma(2); (sigma(1)^2)*sigma(41); ...
                (sigma(1)^2)*sigma(15)+ 2*sigma(2); (sigma(1)^2)*sigma(42)-sigma(2); (sigma(1)^2)*sigma(42); ...
                (sigma(1)^2)*sigma(16)+ 2*sigma(2); (sigma(1)^2)*sigma(43)-sigma(2); (sigma(1)^2)*sigma(43); ...
                (sigma(1)^2)*sigma(17)+ 2*sigma(2); (sigma(1)^2)*sigma(44)-sigma(2); (sigma(1)^2)*sigma(44); ...
                (sigma(1)^2)*sigma(18)+ 2*sigma(2); (sigma(1)^2)*sigma(45)-sigma(2); (sigma(1)^2)*sigma(45); ...
                (sigma(1)^2)*sigma(19)+ 2*sigma(2); (sigma(1)^2)*sigma(46)-sigma(2); (sigma(1)^2)*sigma(46); ...
                (sigma(1)^2)*sigma(20)+ 2*sigma(2); (sigma(1)^2)*sigma(47)-sigma(2); (sigma(1)^2)*sigma(47); ...
                (sigma(1)^2)*sigma(21)+ 2*sigma(2); (sigma(1)^2)*sigma(48)-sigma(2); (sigma(1)^2)*sigma(48); ...
                (sigma(1)^2)*sigma(22)+ 2*sigma(2); (sigma(1)^2)*sigma(49)-sigma(2); (sigma(1)^2)*sigma(49); ...
                (sigma(1)^2)*sigma(23)+ 2*sigma(2); (sigma(1)^2)*sigma(50)-sigma(2); (sigma(1)^2)*sigma(50); ...
                (sigma(1)^2)*sigma(24)+ 2*sigma(2); (sigma(1)^2)*sigma(51)-sigma(2); (sigma(1)^2)*sigma(51); ...
                (sigma(1)^2)*sigma(25)+ 2*sigma(2); (sigma(1)^2)*sigma(52)-sigma(2); (sigma(1)^2)*sigma(52); ...               
                (sigma(1)^2)*sigma(26)+ 2*sigma(2); (sigma(1)^2)*sigma(53)-sigma(2); (sigma(1)^2)*sigma(53); ...
                (sigma(1)^2)*sigma(27)+ 2*sigma(2); (sigma(1)^2)*sigma(54)-sigma(2); (sigma(1)^2)*sigma(54); ...
                (sigma(1)^2)*sigma(58)+ 2*sigma(2); (sigma(1)^2)*sigma(60)-sigma(2); (sigma(1)^2)*sigma(60); ...
                (sigma(1)^2)*sigma(59)+ 2*sigma(2); (sigma(1)^2)*sigma(61)-sigma(2); (sigma(1)^2)*sigma(61); ...
                (sigma(1)^2)*sigma(28)+ 2*sigma(2); (sigma(1)^2)*sigma(55)-sigma(2);  ...
                (sigma(1)^2)*sigma(29)+ 2*sigma(2);  ...
                sigma(3)+ 2*sigma(56); sigma(30)-sigma(56); sigma(30); ...
                sigma(4)+ 2*sigma(56);sigma(31)-sigma(56); sigma(31); ...
                sigma(5)+ 2*sigma(56); sigma(32)-sigma(56); sigma(32); ...
                sigma(6)+ 2*sigma(56); sigma(33)-sigma(56); sigma(33); ...
                sigma(7)+ 2*sigma(56);sigma(34)-sigma(56); sigma(34); ...
                sigma(8)+ 2*sigma(56); sigma(35)-sigma(56); sigma(35); ...
                sigma(9)+ 2*sigma(56); sigma(36)-sigma(56); sigma(36); ...
                sigma(10)+ 2*sigma(56); sigma(37)-sigma(56); sigma(37); ...
                sigma(11)+ 2*sigma(56); sigma(38)-sigma(56); sigma(38); ...
                sigma(12)+ 2*sigma(56); sigma(39)-sigma(56); sigma(39); ...
                sigma(13)+ 2*sigma(56); sigma(40)-sigma(56); sigma(40); ...
                sigma(14)+ 2*sigma(56); sigma(41)-sigma(56); sigma(41); ...
                sigma(15)+ 2*sigma(56); sigma(42)-sigma(56); sigma(42); ...
                sigma(16)+ 2*sigma(56); sigma(43)-sigma(56); sigma(43); ...
                sigma(17)+ 2*sigma(56); sigma(44)-sigma(56); sigma(44); ...
                sigma(18)+ 2*sigma(56); sigma(45)-sigma(56); sigma(45); ...
                sigma(19)+ 2*sigma(56); sigma(46)-sigma(56); sigma(46); ...
                sigma(20)+ 2*sigma(56); sigma(47)-sigma(56); sigma(47); ...
                sigma(21)+ 2*sigma(56); sigma(48)-sigma(56); sigma(48); ...
                sigma(22)+ 2*sigma(56); sigma(49)-sigma(56); sigma(49); ...
                sigma(23)+ 2*sigma(56); sigma(50)-sigma(56); sigma(50); ...
                sigma(24)+ 2*sigma(56); sigma(51)-sigma(56); sigma(51); ...
                sigma(25)+ 2*sigma(56); sigma(52)-sigma(56); sigma(52); ...               
                sigma(26)+ 2*sigma(56); sigma(53)-sigma(56); sigma(53); ...
                sigma(27)+ 2*sigma(56); sigma(54)-sigma(56); sigma(54); ...
                sigma(58)+ 2*sigma(56); sigma(60)-sigma(56); sigma(60); ...
                sigma(59)+ 2*sigma(56); sigma(61)-sigma(56); sigma(61); ...
                sigma(28)+ 2*sigma(56); sigma(55)-sigma(56);  ...
                sigma(29)+ 2*sigma(56);  ...
                (sigma(1))*sigma(3)+ 2*sigma(57); (sigma(1))*sigma(30)-sigma(57); (sigma(1))*sigma(30); ...
                (sigma(1))*sigma(4)+ 2*sigma(57); (sigma(1))*sigma(31)-sigma(57); (sigma(1))*sigma(31); ...
                (sigma(1))*sigma(5)+ 2*sigma(57); (sigma(1))*sigma(32)-sigma(57); (sigma(1))*sigma(32); ...
                (sigma(1))*sigma(6)+ 2*sigma(57); (sigma(1))*sigma(33)-sigma(57); (sigma(1))*sigma(33); ...
                (sigma(1))*sigma(7)+ 2*sigma(57); (sigma(1))*sigma(34)-sigma(57); (sigma(1))*sigma(34); ...
                (sigma(1))*sigma(8)+ 2*sigma(57); (sigma(1))*sigma(35)-sigma(57); (sigma(1))*sigma(35); ...
                (sigma(1))*sigma(9)+ 2*sigma(57); (sigma(1))*sigma(36)-sigma(57); (sigma(1))*sigma(36); ...
                (sigma(1))*sigma(10)+ 2*sigma(57); (sigma(1))*sigma(37)-sigma(57); (sigma(1))*sigma(37); ...
                (sigma(1))*sigma(11)+ 2*sigma(57); (sigma(1))*sigma(38)-sigma(57); (sigma(1))*sigma(38); ...
                (sigma(1))*sigma(12)+ 2*sigma(57); (sigma(1))*sigma(39)-sigma(57); (sigma(1))*sigma(39); ...
                (sigma(1))*sigma(13)+ 2*sigma(57); (sigma(1))*sigma(40)-sigma(57); (sigma(1))*sigma(40); ...
                (sigma(1))*sigma(14)+ 2*sigma(57); (sigma(1))*sigma(41)-sigma(57); (sigma(1))*sigma(41); ...
                (sigma(1))*sigma(15)+ 2*sigma(57); (sigma(1))*sigma(42)-sigma(57); (sigma(1))*sigma(42); ...
                (sigma(1))*sigma(16)+ 2*sigma(57); (sigma(1))*sigma(43)-sigma(57); (sigma(1))*sigma(43); ...
                (sigma(1))*sigma(17)+ 2*sigma(57); (sigma(1))*sigma(44)-sigma(57); (sigma(1))*sigma(44); ...
                (sigma(1))*sigma(18)+ 2*sigma(57); (sigma(1))*sigma(45)-sigma(57); (sigma(1))*sigma(45); ...
                (sigma(1))*sigma(19)+ 2*sigma(57); (sigma(1))*sigma(46)-sigma(57); (sigma(1))*sigma(46); ...
                (sigma(1))*sigma(20)+ 2*sigma(57); (sigma(1))*sigma(47)-sigma(57); (sigma(1))*sigma(47); ...
                (sigma(1))*sigma(21)+ 2*sigma(57); (sigma(1))*sigma(48)-sigma(57); (sigma(1))*sigma(48); ...
                (sigma(1))*sigma(22)+ 2*sigma(57); (sigma(1))*sigma(49)-sigma(57); (sigma(1))*sigma(49); ...
                (sigma(1))*sigma(23)+ 2*sigma(57); (sigma(1))*sigma(50)-sigma(57); (sigma(1))*sigma(50); ...
                (sigma(1))*sigma(24)+ 2*sigma(57); (sigma(1))*sigma(51)-sigma(57); (sigma(1))*sigma(51); ...
                (sigma(1))*sigma(25)+ 2*sigma(57); (sigma(1))*sigma(52)-sigma(57); (sigma(1))*sigma(52); ...               
                (sigma(1))*sigma(26)+ 2*sigma(57); (sigma(1))*sigma(53)-sigma(57); (sigma(1))*sigma(53); ...
                (sigma(1))*sigma(27)+ 2*sigma(57); (sigma(1))*sigma(54)-sigma(57); (sigma(1))*sigma(54); ...
                (sigma(1))*sigma(58)+ 2*sigma(57); (sigma(1))*sigma(60)-sigma(57); (sigma(1))*sigma(60); ...
                (sigma(1))*sigma(59)+ 2*sigma(57); (sigma(1))*sigma(61)-sigma(57); (sigma(1))*sigma(61); ...
                (sigma(1))*sigma(28)+ 2*sigma(57); (sigma(1))*sigma(55)-sigma(57);  ...
                (sigma(1))*sigma(29)+ 2*sigma(57);  ...                                      
                                                 (sigma(1))*sigma(31)-sigma(57);...
                (sigma(1))*sigma(32);(sigma(1))*sigma(32)-sigma(57);  ...
                (sigma(1))*sigma(33); (sigma(1))*sigma(33)-sigma(57); ...
                 (sigma(1))*sigma(34); (sigma(1))*sigma(34)-sigma(57);...
                 (sigma(1))*sigma(35);(sigma(1))*sigma(35)-sigma(57); ...
                 (sigma(1))*sigma(36); (sigma(1))*sigma(36)-sigma(57);...
                 (sigma(1))*sigma(37); (sigma(1))*sigma(37)-sigma(57); ...
                  (sigma(1))*sigma(38);(sigma(1))*sigma(38)-sigma(57); ...
                (sigma(1))*sigma(39); (sigma(1))*sigma(39)-sigma(57);  ...
                (sigma(1))*sigma(40);(sigma(1))*sigma(40)-sigma(57);  ...
                (sigma(1))*sigma(41); (sigma(1))*sigma(41)-sigma(57); ...
                (sigma(1))*sigma(42); (sigma(1))*sigma(42)-sigma(57); ...
                 (sigma(1))*sigma(43); (sigma(1))*sigma(43)-sigma(57); ...
                 (sigma(1))*sigma(44);  (sigma(1))*sigma(44)-sigma(57); ...
                 (sigma(1))*sigma(45); (sigma(1))*sigma(45)-sigma(57); ...
                  (sigma(1))*sigma(46);(sigma(1))*sigma(46)-sigma(57); ...
                 (sigma(1))*sigma(47); (sigma(1))*sigma(47)-sigma(57); ...
                 (sigma(1))*sigma(48); (sigma(1))*sigma(48)-sigma(57); ...
                 (sigma(1))*sigma(49); (sigma(1))*sigma(49)-sigma(57); ...
                  (sigma(1))*sigma(50);(sigma(1))*sigma(50)-sigma(57); ...
                 (sigma(1))*sigma(51);  (sigma(1))*sigma(51)-sigma(57); ...
                 (sigma(1))*sigma(52); (sigma(1))*sigma(52)-sigma(57); ...               
                 (sigma(1))*sigma(53); (sigma(1))*sigma(53)-sigma(57); ...
                (sigma(1))*sigma(54); (sigma(1))*sigma(54)-sigma(57); ...
                (sigma(1))*sigma(60);  (sigma(1))*sigma(60)-sigma(57) ; ...
                (sigma(1))*sigma(61);  (sigma(1))*sigma(61)-sigma(57) ;... 
                (sigma(1))*sigma(55);  (sigma(1))*sigma(55)-sigma(57) ; ...
                (sigma(1))*sigma(56);  (sigma(1))*sigma(56)-sigma(57) ] ;
            
 % test = f_a6(ones(1,61));
%should these be inverted somehow - working from the bottom up
        
%objective = @(sigma)  n*(m_q2 - f_a6(sigma))'*v_inv_q2*(m_q2 - f_a6(sigma)) ; 
objective_o = @(sigma)  n*(m_q2 - f_a6(sigma))'*v_inv_q2*(m_q2 - f_a6(sigma)) ; 
objective_e = @(sigma)  n*(m_q2 - f_a6(sigma))'*eye(length(m_q2))*(m_q2 - f_a6(sigma)) ;

sigma_hat_o = []
sigma_hat_e = []
options = optimoptions('fminunc','MaxFunctionEvaluations',25000,'MaxIterations',1000);
sigma_hat_o = fminunc(objective_o, ones(1,61)) ; %Estimate sigma
sigma_hat_e = fminunc(objective_e, ones(1,61),options) ; %Estimate sigma
%sigma_hat = fminunc(objective, ones(1,61)) ; %Estimate sigma

jac_q6 = jacobianest(f_a6,sigma_hat_e) ; % Estimate Jacobian matrix
mu_2factor_omd = sigma_hat_o(1) ; 
mu_2factor_ewmd = sigma_hat_e(1) ; 

var_2factor_omd = f_a6(sigma_hat_o)*f_a6(sigma_hat_o)' ; 
var_sigma2_omd = pinv(jac_q6'*var_2factor_omd*jac_q6); 
var_mu2_omd = var_sigma2_omd(1); 
var_2factor_ewmd = f_a6(sigma_hat_e)*f_a6(sigma_hat_e)' ; 
var_sigma2_ewmd = pinv(jac_q6'*var_2factor_ewmd*jac_q6); 
var_mu2_ewmd = var_sigma2_ewmd(1);
%jac_q2 = 
%test_stat_q6_omd =  n*(m_q2 - f_a(sigma_hat))'*v_inv_q2*(m_q2 - f_a(sigma_hat))
%test_stat_q6_ewmd =  n*(m_q2 - f_a(sigma_hat))'*eye(length(m_q2))*(m_q2 - f_a(sigma_hat))

[test_stat_q6_omd,test_stat_q6_ewmd] = fun_test_stat(f_a6, sigma_hat_e,sigma_hat_o, jac_q6, v_q2,v_inv_q2, m_q2, n) ; 
%test = f_a6(ones(1,61));
df_q6 = length(m_q2) - rank(jac_q6) ; 

%p_value_q6_omd = chi2pdf(test_stat_q6_omd,df_q6) ; 
%p_value_q6_ewmd = chi2pdf(test_stat_q6_ewmd,df_q6) ; 
p_value_q6_omd = chi2cdf(test_stat_q6_omd,df_q6,'upper') ; 
p_value_q6_ewmd = chi2cdf(test_stat_q6_ewmd,df_q6,'upper') ; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Question 7 - Three component model
     % Pick out elements of c and stack
 m_q2 = fun_m_q2(c) ;

% Do the same for all c(i) _ runs that same fn as above
for i = 1:182 
    m_q2_i(:,i) = fun_m_q2(ctemp(:,:,i)) ;
end

v_temp = [] ; 
for i = 182
    v_temp(:,:,i) = (m_q2_i(:,i) - m_q2)*(m_q2_i(:,i) - m_q2)' ; 
end
v_q2 = (1/182)*sum(v_temp,3) ;
v_inv_q2 = pinv(v_q2) ;

% define function of parameters
f_a7 = @(sigma)[ (sigma(1)^2)*sigma(3)+ 2*sigma(2)+sigma(62); (sigma(1)^2)*sigma(30)-sigma(2); (sigma(1)^2)*sigma(30); ...
                (sigma(1)^2)*sigma(4)+ 2*sigma(2)+sigma(63); (sigma(1)^2)*sigma(31)-sigma(2); (sigma(1)^2)*sigma(31); ...
                (sigma(1)^2)*sigma(5)+ 2*sigma(2)+sigma(64); (sigma(1)^2)*sigma(32)-sigma(2); (sigma(1)^2)*sigma(32); ...
                (sigma(1)^2)*sigma(6)+ 2*sigma(2)+sigma(65); (sigma(1)^2)*sigma(33)-sigma(2); (sigma(1)^2)*sigma(33); ...
                (sigma(1)^2)*sigma(7)+ 2*sigma(2)+sigma(66); (sigma(1)^2)*sigma(34)-sigma(2); (sigma(1)^2)*sigma(34); ...
                (sigma(1)^2)*sigma(8)+ 2*sigma(2)+sigma(67); (sigma(1)^2)*sigma(35)-sigma(2); (sigma(1)^2)*sigma(35); ...
                (sigma(1)^2)*sigma(9)+ 2*sigma(2)+sigma(68); (sigma(1)^2)*sigma(36)-sigma(2); (sigma(1)^2)*sigma(36); ...
                (sigma(1)^2)*sigma(10)+ 2*sigma(2)+sigma(69); (sigma(1)^2)*sigma(37)-sigma(2); (sigma(1)^2)*sigma(37); ...
                (sigma(1)^2)*sigma(11)+ 2*sigma(2)+sigma(70); (sigma(1)^2)*sigma(38)-sigma(2); (sigma(1)^2)*sigma(38); ...
                (sigma(1)^2)*sigma(12)+ 2*sigma(2)+sigma(71); (sigma(1)^2)*sigma(39)-sigma(2); (sigma(1)^2)*sigma(39); ...
                (sigma(1)^2)*sigma(13)+ 2*sigma(2)+sigma(72); (sigma(1)^2)*sigma(40)-sigma(2); (sigma(1)^2)*sigma(40); ...
                (sigma(1)^2)*sigma(14)+ 2*sigma(2)+sigma(73); (sigma(1)^2)*sigma(41)-sigma(2); (sigma(1)^2)*sigma(41); ...
                (sigma(1)^2)*sigma(15)+ 2*sigma(2)+sigma(74); (sigma(1)^2)*sigma(42)-sigma(2); (sigma(1)^2)*sigma(42); ...
                (sigma(1)^2)*sigma(16)+ 2*sigma(2)+sigma(75); (sigma(1)^2)*sigma(43)-sigma(2); (sigma(1)^2)*sigma(43); ...
                (sigma(1)^2)*sigma(17)+ 2*sigma(2)+sigma(76); (sigma(1)^2)*sigma(44)-sigma(2); (sigma(1)^2)*sigma(44); ...
                (sigma(1)^2)*sigma(18)+ 2*sigma(2)+sigma(77); (sigma(1)^2)*sigma(45)-sigma(2); (sigma(1)^2)*sigma(45); ...
                (sigma(1)^2)*sigma(19)+ 2*sigma(2)+sigma(78); (sigma(1)^2)*sigma(46)-sigma(2); (sigma(1)^2)*sigma(46); ...
                (sigma(1)^2)*sigma(20)+ 2*sigma(2)+sigma(79); (sigma(1)^2)*sigma(47)-sigma(2); (sigma(1)^2)*sigma(47); ...
                (sigma(1)^2)*sigma(21)+ 2*sigma(2)+sigma(80); (sigma(1)^2)*sigma(48)-sigma(2); (sigma(1)^2)*sigma(48); ...
                (sigma(1)^2)*sigma(22)+ 2*sigma(2)+sigma(81); (sigma(1)^2)*sigma(49)-sigma(2); (sigma(1)^2)*sigma(49); ...
                (sigma(1)^2)*sigma(23)+ 2*sigma(2)+sigma(82); (sigma(1)^2)*sigma(50)-sigma(2); (sigma(1)^2)*sigma(50); ...
                (sigma(1)^2)*sigma(24)+ 2*sigma(2)+sigma(83); (sigma(1)^2)*sigma(51)-sigma(2); (sigma(1)^2)*sigma(51); ...
                (sigma(1)^2)*sigma(25)+ 2*sigma(2)+sigma(84); (sigma(1)^2)*sigma(52)-sigma(2); (sigma(1)^2)*sigma(52); ...               
                (sigma(1)^2)*sigma(26)+ 2*sigma(2)+sigma(85); (sigma(1)^2)*sigma(53)-sigma(2); (sigma(1)^2)*sigma(53); ...
                (sigma(1)^2)*sigma(27)+ 2*sigma(2)+sigma(86); (sigma(1)^2)*sigma(54)-sigma(2); (sigma(1)^2)*sigma(54); ...
                (sigma(1)^2)*sigma(58)+ 2*sigma(2)+sigma(87); (sigma(1)^2)*sigma(60)-sigma(2); (sigma(1)^2)*sigma(60); ...
                (sigma(1)^2)*sigma(59)+ 2*sigma(2)+sigma(88); (sigma(1)^2)*sigma(61)-sigma(2); (sigma(1)^2)*sigma(61); ...
                (sigma(1)^2)*sigma(28)+ 2*sigma(2)+sigma(89); (sigma(1)^2)*sigma(55)-sigma(2);  ...
                (sigma(1)^2)*sigma(29)+ 2*sigma(2)+sigma(90);  ...
                sigma(3)+ 2*sigma(56)+sigma(91); sigma(30)-sigma(56); sigma(30); ...
                sigma(4)+ 2*sigma(56)+sigma(92);sigma(31)-sigma(56); sigma(31); ...
                sigma(5)+ 2*sigma(56)+sigma(93); sigma(32)-sigma(56); sigma(32); ...
                sigma(6)+ 2*sigma(56)+sigma(94); sigma(33)-sigma(56); sigma(33); ...
                sigma(7)+ 2*sigma(56)+sigma(95);sigma(34)-sigma(56); sigma(34); ...
                sigma(8)+ 2*sigma(56)+sigma(96); sigma(35)-sigma(56); sigma(35); ...
                sigma(9)+ 2*sigma(56)+sigma(97); sigma(36)-sigma(56); sigma(36); ...
                sigma(10)+ 2*sigma(56)+sigma(98); sigma(37)-sigma(56); sigma(37); ...
                sigma(11)+ 2*sigma(56)+sigma(99); sigma(38)-sigma(56); sigma(38); ...
                sigma(12)+ 2*sigma(56)+sigma(100); sigma(39)-sigma(56); sigma(39); ...
                sigma(13)+ 2*sigma(56)+sigma(101); sigma(40)-sigma(56); sigma(40); ...
                sigma(14)+ 2*sigma(56)+sigma(102); sigma(41)-sigma(56); sigma(41); ...
                sigma(15)+ 2*sigma(56)+sigma(103); sigma(42)-sigma(56); sigma(42); ...
                sigma(16)+ 2*sigma(56)+sigma(104); sigma(43)-sigma(56); sigma(43); ...
                sigma(17)+ 2*sigma(56)+sigma(105); sigma(44)-sigma(56); sigma(44); ...
                sigma(18)+ 2*sigma(56)+sigma(106); sigma(45)-sigma(56); sigma(45); ...
                sigma(19)+ 2*sigma(56)+sigma(107); sigma(46)-sigma(56); sigma(46); ...
                sigma(20)+ 2*sigma(56)+sigma(108); sigma(47)-sigma(56); sigma(47); ...
                sigma(21)+ 2*sigma(56)+sigma(109); sigma(48)-sigma(56); sigma(48); ...
                sigma(22)+ 2*sigma(56)+sigma(110); sigma(49)-sigma(56); sigma(49); ...
                sigma(23)+ 2*sigma(56)+sigma(111); sigma(50)-sigma(56); sigma(50); ...
                sigma(24)+ 2*sigma(56)+sigma(112); sigma(51)-sigma(56); sigma(51); ...
                sigma(25)+ 2*sigma(56)+sigma(113); sigma(52)-sigma(56); sigma(52); ...               
                sigma(26)+ 2*sigma(56)+sigma(114); sigma(53)-sigma(56); sigma(53); ...
                sigma(27)+ 2*sigma(56)+sigma(115); sigma(54)-sigma(56); sigma(54); ...
                sigma(58)+ 2*sigma(56)+sigma(116); sigma(60)-sigma(56); sigma(60); ...
                sigma(59)+ 2*sigma(56)+sigma(117); sigma(61)-sigma(56); sigma(61); ...
                sigma(28)+ 2*sigma(56)+sigma(118); sigma(55)-sigma(56);  ...
                sigma(29)+ 2*sigma(56)+sigma(119);  ...
                (sigma(1))*sigma(3)+ 2*sigma(120); (sigma(1))*sigma(30)-sigma(57); (sigma(1))*sigma(30); ...
                (sigma(1))*sigma(4)+ 2*sigma(121); (sigma(1))*sigma(31)-sigma(57); (sigma(1))*sigma(31); ...
                (sigma(1))*sigma(5)+ 2*sigma(122); (sigma(1))*sigma(32)-sigma(57); (sigma(1))*sigma(32); ...
                (sigma(1))*sigma(6)+ 2*sigma(123); (sigma(1))*sigma(33)-sigma(57); (sigma(1))*sigma(33); ...
                (sigma(1))*sigma(7)+ 2*sigma(124); (sigma(1))*sigma(34)-sigma(57); (sigma(1))*sigma(34); ...
                (sigma(1))*sigma(8)+ 2*sigma(125); (sigma(1))*sigma(35)-sigma(57); (sigma(1))*sigma(35); ...
                (sigma(1))*sigma(9)+ 2*sigma(126); (sigma(1))*sigma(36)-sigma(57); (sigma(1))*sigma(36); ...
                (sigma(1))*sigma(10)+ 2*sigma(127); (sigma(1))*sigma(37)-sigma(57); (sigma(1))*sigma(37); ...
                (sigma(1))*sigma(11)+ 2*sigma(128); (sigma(1))*sigma(38)-sigma(57); (sigma(1))*sigma(38); ...
                (sigma(1))*sigma(12)+ 2*sigma(129); (sigma(1))*sigma(39)-sigma(57); (sigma(1))*sigma(39); ...
                (sigma(1))*sigma(13)+ 2*sigma(130); (sigma(1))*sigma(40)-sigma(57); (sigma(1))*sigma(40); ...
                (sigma(1))*sigma(14)+ 2*sigma(131); (sigma(1))*sigma(41)-sigma(57); (sigma(1))*sigma(41); ...
                (sigma(1))*sigma(15)+ 2*sigma(132); (sigma(1))*sigma(42)-sigma(57); (sigma(1))*sigma(42); ...
                (sigma(1))*sigma(16)+ 2*sigma(133); (sigma(1))*sigma(43)-sigma(57); (sigma(1))*sigma(43); ...
                (sigma(1))*sigma(17)+ 2*sigma(134); (sigma(1))*sigma(44)-sigma(57); (sigma(1))*sigma(44); ...
                (sigma(1))*sigma(18)+ 2*sigma(135); (sigma(1))*sigma(45)-sigma(57); (sigma(1))*sigma(45); ...
                (sigma(1))*sigma(19)+ 2*sigma(136); (sigma(1))*sigma(46)-sigma(57); (sigma(1))*sigma(46); ...
                (sigma(1))*sigma(20)+ 2*sigma(137); (sigma(1))*sigma(47)-sigma(57); (sigma(1))*sigma(47); ...
                (sigma(1))*sigma(21)+ 2*sigma(138); (sigma(1))*sigma(48)-sigma(57); (sigma(1))*sigma(48); ...
                (sigma(1))*sigma(22)+ 2*sigma(139); (sigma(1))*sigma(49)-sigma(57); (sigma(1))*sigma(49); ...
                (sigma(1))*sigma(23)+ 2*sigma(140); (sigma(1))*sigma(50)-sigma(57); (sigma(1))*sigma(50); ...
                (sigma(1))*sigma(24)+ 2*sigma(141); (sigma(1))*sigma(51)-sigma(57); (sigma(1))*sigma(51); ...
                (sigma(1))*sigma(25)+ 2*sigma(142); (sigma(1))*sigma(52)-sigma(57); (sigma(1))*sigma(52); ...               
                (sigma(1))*sigma(26)+ 2*sigma(143); (sigma(1))*sigma(53)-sigma(57); (sigma(1))*sigma(53); ...
                (sigma(1))*sigma(27)+ 2*sigma(144); (sigma(1))*sigma(54)-sigma(57); (sigma(1))*sigma(54); ...
                (sigma(1))*sigma(58)+ 2*sigma(145); (sigma(1))*sigma(60)-sigma(57); (sigma(1))*sigma(60); ...
                (sigma(1))*sigma(59)+ 2*sigma(146); (sigma(1))*sigma(61)-sigma(57); (sigma(1))*sigma(61); ...
                (sigma(1))*sigma(28)+ 2*sigma(147); (sigma(1))*sigma(55)-sigma(57);  ...
                (sigma(1))*sigma(29)+ 2*sigma(148);  ...                                      
                                                 (sigma(1))*sigma(31)-sigma(57);...
                (sigma(1))*sigma(32);(sigma(1))*sigma(32)-sigma(57);  ...
                (sigma(1))*sigma(33); (sigma(1))*sigma(33)-sigma(57); ...
                 (sigma(1))*sigma(34); (sigma(1))*sigma(34)-sigma(57);...
                 (sigma(1))*sigma(35);(sigma(1))*sigma(35)-sigma(57); ...
                 (sigma(1))*sigma(36); (sigma(1))*sigma(36)-sigma(57);...
                 (sigma(1))*sigma(37); (sigma(1))*sigma(37)-sigma(57); ...
                  (sigma(1))*sigma(38);(sigma(1))*sigma(38)-sigma(57); ...
                (sigma(1))*sigma(39); (sigma(1))*sigma(39)-sigma(57);  ...
                (sigma(1))*sigma(40);(sigma(1))*sigma(40)-sigma(57);  ...
                (sigma(1))*sigma(41); (sigma(1))*sigma(41)-sigma(57); ...
                (sigma(1))*sigma(42); (sigma(1))*sigma(42)-sigma(57); ...
                 (sigma(1))*sigma(43); (sigma(1))*sigma(43)-sigma(57); ...
                 (sigma(1))*sigma(44);  (sigma(1))*sigma(44)-sigma(57); ...
                 (sigma(1))*sigma(45); (sigma(1))*sigma(45)-sigma(57); ...
                  (sigma(1))*sigma(46);(sigma(1))*sigma(46)-sigma(57); ...
                 (sigma(1))*sigma(47); (sigma(1))*sigma(47)-sigma(57); ...
                 (sigma(1))*sigma(48); (sigma(1))*sigma(48)-sigma(57); ...
                 (sigma(1))*sigma(49); (sigma(1))*sigma(49)-sigma(57); ...
                  (sigma(1))*sigma(50);(sigma(1))*sigma(50)-sigma(57); ...
                 (sigma(1))*sigma(51);  (sigma(1))*sigma(51)-sigma(57); ...
                 (sigma(1))*sigma(52); (sigma(1))*sigma(52)-sigma(57); ...               
                 (sigma(1))*sigma(53); (sigma(1))*sigma(53)-sigma(57); ...
                (sigma(1))*sigma(54); (sigma(1))*sigma(54)-sigma(57); ...
                (sigma(1))*sigma(60);  (sigma(1))*sigma(60)-sigma(57) ; ...
                (sigma(1))*sigma(61);  (sigma(1))*sigma(61)-sigma(57) ;... 
                (sigma(1))*sigma(55);  (sigma(1))*sigma(55)-sigma(57) ; ...
                (sigma(1))*sigma(56);  (sigma(1))*sigma(56)-sigma(57) ] ;
            
  test = f_a7(ones(1,148));
%should these be inverted somehow - working from the bottom up
        

objective_o = @(sigma)  n*(m_q2 - f_a7(sigma))'*v_inv_q2*(m_q2 - f_a7(sigma)) ; 
objective_e = @(sigma)  n*(m_q2 - f_a7(sigma))'*eye(length(m_q2))*(m_q2 - f_a7(sigma)) ;

sigma_hat_o = []
sigma_hat_e = []

sigma_hat_o = fminunc(objective_o, ones(1,148)) ; %Estimate sigma
sigma_hat_e = fminunc(objective_e, ones(1,148),options) ; %Estimate sigma
%sigma_hat = fminunc(objective, ones(1,61)) ; %Estimate sigma

jac_q7 = jacobianest(f_a7,sigma_hat_e) ; % Estimate Jacobian matrix
mu_3factor_omd = sigma_hat_o(1) ; 
mu_3factor_ewmd = sigma_hat_e(1) ; 

var_3factor_omd = f_a7(sigma_hat_o)*f_a7(sigma_hat_o)' ; 
var_sigma3_omd = pinv(jac_q7'*var_3factor_omd*jac_q7); 
var_mu3_omd = var_sigma3_omd(1); 
var_3factor_ewmd = f_a7(sigma_hat_e)*f_a7(sigma_hat_e)' ; 
var_sigma3_ewmd = pinv(jac_q7'*var_3factor_ewmd*jac_q7); 
var_mu3_ewmd = var_sigma3_ewmd(1);

[test_stat_q7_omd,test_stat_q7_ewmd] = fun_test_stat(f_a7, sigma_hat_e, sigma_hat_o, jac_q7, v_q2,v_inv_q2, m_q2, n) ; 
df_q7 = length(m_q2) - rank(jac_q7) ; 

%p_value_q7_omd = chi2pdf(test_stat_q7_omd,df_q7) ; 
%p_value_q7_ewmd = chi2pdf(test_stat_q7_ewmd,df_q7) ; 
p_value_q7_omd = chi2cdf(test_stat_q7_omd,df_q7,'upper') ; 
p_value_q7_ewmd = chi2cdf(test_stat_q7_ewmd,df_q7,'upper') ; 
%% FINAL TABLES
% F stats, df, p-value, mu
table_EWMD = [ test_stat_q1_ewmd, df_q1, p_value_q1_ewmd,NaN,NaN ;...
               test_stat_q2_ewmd,df_q2, p_value_q2_ewmd, NaN,NaN;...
               test_stat_q3_ewmd,  df_q3, p_value_q3_ewmd,NaN ,NaN;...
               test_stat_q4_ewmd, df_q4, p_value_q4_ewmd,NaN ,NaN;...
               test_stat_q5_ewmd, df_q5, p_value_q5_ewmd,NaN ,NaN;...
               test_stat_q6_ewmd, df_q6, p_value_q6_ewmd, mu_2factor_ewmd ,var_mu2_ewmd ;...
               test_stat_q7_ewmd, df_q7, p_value_q7_ewmd, mu_3factor_ewmd ,var_mu3_ewmd ]
           
table_OMD = [  test_stat_q6_omd, df_q6, p_value_q6_omd,mu_2factor_omd, var_mu2_omd ;...
               test_stat_q7_omd, df_q7, p_value_q7_omd,mu_3factor_omd , var_mu3_omd]    
           
% calulating nu
eta_2_ewmd = 1/(mu_2factor_ewmd-1) ; 
eta_2_omd = 1/(mu_2factor_omd-1) ;
eta_3_ewmd = 1/(mu_3factor_ewmd-1) ; 
eta_3_omd = 1/(mu_3factor_omd-1) ;
table_elas =   [  eta_2_ewmd , eta_2_omd; ...     
                  eta_3_ewmd , eta_3_omd ] 
% Notes: could update jacobian for the different estimators

